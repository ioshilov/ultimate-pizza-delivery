DROP TABLE IF EXISTS authusergroup CASCADE ;
DROP TABLE IF EXISTS orderdetails  ;
DROP TABLE IF EXISTS toppings_dishes CASCADE;
DROP TABLE IF EXISTS ordercart_dishes CASCADE;
DROP TABLE IF EXISTS dishes CASCADE ;
DROP TABLE IF EXISTS foodtypes  ;
DROP TABLE IF EXISTS toppings CASCADE ;
DROP TABLE IF EXISTS payments  ;
DROP TABLE IF EXISTS orders  ;
DROP TABLE IF EXISTS ordercart  ;
DROP TABLE IF EXISTS customerscredentials CASCADE ;
DROP TABLE IF EXISTS customers  ;





CREATE TABLE customers (
   id serial PRIMARY KEY,
   name VARCHAR ( 50 ) NOT NULL,
   surname VARCHAR ( 50 ),
   mobile VARCHAR ( 15) NOT NULL,
   dob DATE NOT NULL,
   email VARCHAR ( 50 ) NOT NULL,
   homeaddress VARCHAR ( 200 ) NOT NULL
);

CREATE TABLE customerscredentials (
	id serial PRIMARY KEY,
	customerid INT UNIQUE NOT NULL,
	username VARCHAR (50) UNIQUE NOT NULL,
	password VARCHAR (50) NOT NULL,
	FOREIGN KEY (customerid)
      REFERENCES customers (id)
);

CREATE TABLE authusergroup (
	id serial  PRIMARY KEY,
	username VARCHAR (50) , 
	authgroup VARCHAR (50),
	FOREIGN KEY (username)
      REFERENCES customerscredentials (username)
);

CREATE TABLE orders (
	id serial PRIMARY KEY,
	customerid INT,
	sum decimal NOT NULL,
	date DATE NOT NULL,
	FOREIGN KEY (customerid)
      REFERENCES customers (id)
	  );
	  
CREATE TABLE foodtypes (	
	id serial PRIMARY KEY,
	name VARCHAR ( 20 ) NOT NULL,
	price decimal NOT NULL,
	description VARCHAR (200) NOT NULL,
	image bytea
	);
	  
	  
CREATE TABLE toppings (	
	id serial PRIMARY KEY,
	name VARCHAR ( 50 ) NOT NULL,
	price decimal NOT NULL
	);
	
 
CREATE TABLE dishes (
	id serial PRIMARY KEY,
	foodtypeid INT,
	FOREIGN KEY (foodtypeid)
      REFERENCES foodtypes (id) 
	);
	
	
	
CREATE TABLE toppings_dishes (
	toppingid INT references toppings (id) ,
	dishid INT references dishes (id),
	CONSTRAINT toppings_dishes_pk PRIMARY KEY (dishid,toppingid));
	  
	  
CREATE TABLE ordercart (
		id serial PRIMARY KEY
	  );  
	  
	  
CREATE TABLE ordercart_dishes (
	ordercartid INT references  ordercart(id) ,
	dishid INT references dishes (id),
	CONSTRAINT ordercart_dishes_pk PRIMARY KEY (ordercartid,dishid));
	  
	  
	  
CREATE TABLE orderdetails (
	id serial PRIMARY KEY,
	orderid INT,
	ordercartid INT,
	deliveryname VARCHAR ( 50 ),
	deliveryMOBILE VARCHAR ( 50 ),
	deliveryADDRESS VARCHAR ( 200 ),
	SPECIALCOMMENTS VARCHAR ( 200 ),
	deliveryprice decimal NOT NULL,
	FOREIGN KEY (orderid)
      REFERENCES orders (id),
	FOREIGN KEY (ordercartid)
      REFERENCES orderCart (id)
	  );
	  
CREATE TABLE payments (
	id serial PRIMARY KEY,
	orderid INT,
	paymentmethod VARCHAR ( 50 ) NOT NULL,
	FOREIGN KEY (orderid)
      REFERENCES orders (id)
	  );
	  
	  



INSERT INTO customers (name, surname,mobile,dob,email,homeaddress)
VALUES('BOB','DYLAN',+77011112233,'2022-06-01','BOBDYLAN@GMAIL.COM','BOBDYLANS HOME ADDEESS'),
('SPANCH','BOB',+77012223344,'2023-07-02','SBOB@GMAIL.COM','SBOBS PINEAPPLE'),
('BEN','AFFLEK',+77013334455,'2023-02-11','Bafflek@GMAIL.COM','Bens home address'),
('Natalie','Portman',+77014445566,'2021-12-12','Nportman@GMAIL.COM','Natas home address');


INSERT INTO customerscredentials (customerid, username,password)
VALUES
('1','BOBDYLAN','BOBDYLAN'),
('2','SBOB','SBPASSWORD'),
('3','BAFFLEK','BAPASSWORD'),
('4','NPortman','NPPASSWORD')
;


INSERT INTO authusergroup (username,authgroup)
VALUES
('BOBDYLAN','ADMIN'),
('BOBDYLAN','CUSTOMER'),
('SBOB','CUSTOMER'),
('BAFFLEK','CUSTOMER'),
('NPortman','CUSTOMER');


INSERT INTO foodtypes (name,price,description) VALUES
('Pizza margarita',1300, 'just default pizza'),
('Pizza Pepperoni',1600,'just default pizza2'),
('Pizza Diablo',2200,'just default pizza3'),
('Pizza Napoli',2500,'just default pizza4');



INSERT INTO toppings (name,price) VALUES
('cheese',100),
('pepper',150),
('jalapeno',300),
('olives',500);
